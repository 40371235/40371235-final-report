{"pages":[{"title":"About","text":"2017Fall 機械設計工程系 CADP & CP 課程倉儲: https://mde1a1.kmol.info/2017fall 課程投影片: https://mde1a1.kmol.info/2017fall/doc/trunk/index.html 課程網誌: https://mde1a1.kmol.info/2017fall/doc/trunk/blog/","tags":"misc","url":"https://40371235.github.io/40371235-final-report/blog/pages/about/"},{"title":"2017 Fall CADP 第十八週","text":"期末驗收與總結 倉儲 . YouTube .","tags":"Course","url":"https://40371235.github.io/40371235-final-report/blog/2017-fall-cadp-w18.html"},{"title":"2017 Fall CADP 第十七週","text":"進度: 1.先在sollidworks中模擬的出來,但是在V-rep模擬中模擬會成功提球1次但第2次失敗 2.完成V-rep鋼球運動系統模擬,但是球只能成功提球1次第二次的時候會掉下來 3.彙整期末個人簡報所需要的資料與補齊影片 4.分派期末報告的工作","tags":"Course","url":"https://40371235.github.io/40371235-final-report/blog/2017-fall-cadp-w17.html"},{"title":"2017 Fall CADP 第十六週","text":"進度: 1.個人軌道部分繪製完成 2.完成整個鋼球運動系統繪製 3.彈珠檯繪製完成,但是發射模擬不出來,先暫時完成拍攝個人期末驗收","tags":"Course","url":"https://40371235.github.io/40371235-final-report/blog/2017-fall-cadp-w16.html"},{"title":"2017 Fall CADP 第十五週","text":"進度: 1.討論最終提球機構設計 2.討論整個鋼球運動系統運行方式與尺寸 3.設計與繪製個人軌道 4.整理Onshape教學影片並將其中文化","tags":"Course","url":"https://40371235.github.io/40371235-final-report/blog/2017-fall-cadp-w15.html"},{"title":"2017 Fall CADP 第十四週","text":"1.說明期末內容查驗項目 2.利用前兩周練習的Github重新建立與加入期末協同倉儲 3.Github提交推送與身分綁定 4.利用git pull解決衝突","tags":"Course","url":"https://40371235.github.io/40371235-final-report/blog/2017-fall-cadp-w14.html"},{"title":"2017 Fall CADP 第十三週","text":"1.介紹期末專案任務分配: (1)須將兩個 Onshape 的教學影片內容中文化後, 拍攝說明影片, 上 傳到 Vimeo 與 Youtube, 並將心得整理在分組報告中 (2)完成運動系統的 V-rep 模擬, 配合各學員必須各自完成的軌道 並進行運動模擬 (3)完成模擬軌道的實作 (4)完成鋼球運動主模組系統的實作 (5)在 Github 協同完成 PDF 格式的分組期末報告 (6)參照專案執行歷程中所建立的倉儲資料, 根據所完成的模擬及 實作內容, 拍攝期末簡報影片, 上傳到 Vimeo 與 Youtube. 2. 問題:launchLeo突然go不起來 方法:將暫存檔(.leo)刪除再重新輸入學號即可","tags":"Course","url":"https://40371235.github.io/40371235-final-report/blog/2017-fall-cadp-w13.html"},{"title":"2017 Fall CADP 第十二週","text":"1.創立Github帳號,以小組協同的模式,執行各自的期末專案. 2.利用Github協同倉儲學習建立練習用的倉儲,練習如何利用Github倉儲執行期末專案 3.學習如何新增協同者, 以及協同者如何接受邀請.","tags":"Course","url":"https://40371235.github.io/40371235-final-report/blog/2017-fall-cadp-w12.html"},{"title":"2017 Fall CADP 第十週","text":"CADP 鋼球運動系統電腦輔助設計 各組開始初步的設計自己的鋼球運動系統","tags":"Course","url":"https://40371235.github.io/40371235-final-report/blog/2017-fall-cadp-w10.html"},{"title":"2017 Fall CADP 第九週","text":"補足上課欠缺的資料,並製作投影片","tags":"Course","url":"https://40371235.github.io/40371235-final-report/blog/2017-fall-cadp-w9.html"},{"title":"2017 Fall CADP 第八週","text":"補足上課欠缺的資料,並製作投影片","tags":"Course","url":"https://40371235.github.io/40371235-final-report/blog/2017-fall-cadp-w8.html"},{"title":"電腦輔助設計實習第七週學習心得","text":"(1)完成新增第七週個人倉儲網誌 國立虎尾科技大學-機械與電腦輔助工程系-電腦輔助設計實習-40371235-w7-exam-1 from 40371235 on Vimeo . (2)使用Solvespace完成繪製零件 國立虎尾科技大學-機械與電腦輔助工程系-電腦輔助設計實習-40371235-w7-exam-2 from 40371235 on Vimeo . (3)利用Solvespace組立零件 國立虎尾科技大學-機械與電腦輔助工程系-電腦輔助設計實習-40371235-w7-exam-3 from 40371235 on Vimeo .","tags":"Course","url":"https://40371235.github.io/40371235-final-report/blog/2017-fall-cadp-w7.html"},{"title":"2017 Fall CADP 第六週","text":"學習利用先前所繪製的 Nutcracker 零件, 在 Solvespace 中完成組立, 完成 Nutcracker 在 Solvespace 與 OnShape 中的機構工程圖與組立","tags":"Course","url":"https://40371235.github.io/40371235-final-report/blog/2017-fall-cadp-w6.html"},{"title":"2017 Fall CADP 第五週","text":"學習Solvespace繪製Nutcracker零組件,可以利用triangle mesh格式,以stl(3D列印所需要的格式)或html格式(可利用網頁看實體)輸出. 並將系統轉入 V-rep進行組立. 練習1: 練習2:","tags":"Course","url":"https://40371235.github.io/40371235-final-report/blog/2017-fall-cadp-w5.html"},{"title":"2017 Fall CADP 第四週","text":"學習維護倉儲 學習Leo Editor 學習利用Leo Editor的近端遠端維護更新並檢視個人的網誌 fossil version 查版本並版本要一樣 mkdir wd 建立一個工作目錄(wd) cd XX 進入工作目錄(wd) fossil add . 加入 fossil status 檢查檔案 fossil commit -m \"XX\" 提交資料進入倉儲 pelican-blog 近端 github-blog 遠端 title 跟 slug要記得更改兩篇不能有一樣的標題","tags":"Course","url":"https://40371235.github.io/40371235-final-report/blog/2017-fall-cadp-w4.html"},{"title":"2017 Fall CADP 第三週","text":"心得: 設計是一種表達, 而且是在思考與多方考量後所完成的表達,其中具有六種形式, 包括口語、文字、2D、3D、數學與實體表達而不只是畫圖而已. 因此機械設計就是靈活運用這六種表達, 明確地說明如何透過固體、流體與軟體元件之互動運作, 而能達成預定結果之明確與具體表達. 參與機械設計的工程師,為解決產品開發過程所面臨的各項問題, 需展現出三種必備能力: 自學能力、執行能力與想像能力.","tags":"Course","url":"https://40371235.github.io/40371235-final-report/blog/2017-fall-cadp-w3.html"},{"title":"2017 Fall CADP 第二週","text":"本學期起各班透過一台 Ubuntu 16.04 主機, 建立 Fossil SCM 伺服器, 且每一學員發放一個 Fossil SCM 倉儲, 其中各學員可以利用 Wiki 與 Technote 紀錄學習資料外, 還可以將靜態網誌與簡報檔案放入 Files 資料區. Good cadpa w2-1 希望為每位學員建立倉儲的設想流程如下: 各學員可以獨立維護倉儲內容, 也可以在總管理員的權限下, 為分組學員建立帳號, 逐步導入協同設計 各學員的倉儲以修課班級命名伺服器, 以學號命名倉儲, 方便依照此一規律擷取各學員的倉儲頁面. 各學員能以電子郵件收到與新建倉儲相關的連結, 以及帳號密碼. 必須擴增 Ubuntu ulimits -n 同時開檔的設限範圍 (內定只允許同時開啟 1024 個檔案) 解決方案: 主機名稱可以透過 domain dns 中的 CNAME 別名方式處理, 因為目前所能提供出來的 IPv4/IPv6 雙支援主機, 之前已經都設定了符號名稱. fossil init 雖然提供指定管理者的 -A 選項功能, 但是無法直接指定管理者對應密碼, 因此必須建立倉儲之後, 再利用 fossil user 修改密碼, 之後再利用 Gmail 寄出通知信, 其中提供倉儲連結, 登入帳號與密碼等資訊. 建立各學員倉儲檔案的程式如下, 如前所述, 主要透過兩個 Fossil SCM 指令完成, 在 Windows 採用 Fossil SCM 2.3 版建立所有 .fossil 倉儲時, 將同時以 email 通知各學員. 各學員的 .fossil 檔案再以 sftp 送到伺服主機對應帳號所屬的目錄下. 必須要特別注意的是, 採用 Fossil SCM 2.3 版所建立的 .fossil 倉儲檔案, 在 Ubuntu 操作系統上也必須採用相同版本的 fossil, 否則舊版 fossil 可能無法開啟新版 fossil 程式所建立的倉儲檔. import os import string import random # 使用 Gmail 寄信必須導入下列模組 import smtplib import re from email.mime.text import MIMEText from email.header import Header # 用來以亂數建立密碼的韓式 def id_generator(size=6, chars=string.ascii_uppercase + string.digits): ''' source: https://stackoverflow.com/questions/2257441/random-string-generation-with-upper-case-letters-and-digits-in-python ''' return ''.join(random.choice(chars) for _ in range(size)) # 讀取學員名單, 逐一取得學員學號, 學員名單, 檢查點 1/7 student_data = open(\"2017fall_list/1b.txt\").read() student_list = student_data.splitlines() # 利用 gmail smtp 功能寄信 server = smtplib.SMTP('smtp.gmail.com:587') server.ehlo() server.starttls() # 以下必須準備好對應郵件帳號與密碼的外部檔案, 所提供的寄信帳號, 是否可以寄信, 檢查點 2/7 ''' 寄信之前必須到 https://www.google.com/settings/security/lesssecureapps 修改權限, 改為較低安全權限 否則無法使用程式寄信! ''' # 從外部檔案讀取要用來寄信的 gmail 帳號與密碼 # mail.txt 格式為: 電子郵箱,對應密碼, 以逗點隔開, 檢查點 3/7 email_data = open(\"z:/2017fall/mail.txt\").read() email, email_password= email_data.split(\",\") print(email, email_password) # 是否登入所提供寄信的電子郵箱, 4/7 server.login(email, email_password) # 不同課程名稱, 與對應主機名稱, 必須配合修改 5/7 course_title = \"計算機程式\" fossil_server = \"cpb.kmol.info\" for student_num in student_list: username = student_num repository = username + '.fossil' # 利用所提供的字串, 以亂數組成六個字元的密碼 password = id_generator(6, \"23456789abcdef\") print(student_num, \", \" , password) # 執行 dos command 指令, 建立倉儲 os.system(\"fossil init -A \" +username + \" \" + repository) print(\"已經建立倉儲 \" + repository) # 執行 dos command 指令, 修改使用者密碼 os.system(\"fossil user password \" + username + \" \" + password + \" -R \" + repository) print(\"已經修改密碼\") # 利用 Gmail 寄信, 告知各學員倉儲連結與帳號密碼 # 每一位學員收到的 output 都從這裡 reset output = \"\" # 若學號欄為空, 則不寄信 if student_num != \"\": # output 為寄給每一位學員的資料表格 mail_content = student_num+' 您好: 您在 '+course_title+' 課程中的區域網路倉儲: https://'+fossil_server+'/'+student_num+' ' mail_content += '管理帳號為:'+ student_num + ' 管理密碼為: '+ password+' ' print(student_num) print(mail_content) # 至此 mail_content 已經確定 # 在測試與實際寄送資料, 也必須配合修改, 檢查點 6/7 receiver_email = student_num + \"@gm.nfu.edu.tw\" # 測試用 #receiver_email = student_num+\"@mde.tw\" # 列出收信人 email 位址 #print(receiver_email) #message= MIMEText(mail_content,'plain','UTF-8') # 以 html 格式寄信 message= MIMEText(mail_content,'html','UTF-8') message['Subject'] = Header(course_title+\" Fossil SCM 帳號通知\", 'UTF-8') # 可以先不寄信, 確定格式正確後再開啟, 是否實際寄出信件, 檢查點 7/7 server.sendmail(\"gmail_address\", receiver_email, message.as_string()) server.quit() 各班所完成的主機: 二甲電腦輔助設計實習: https://cadpa.kmol.info 二乙電腦輔助設計實習: https://cadpb.kmol.info 一甲計算機程式: https://cpa.kmol.info 一乙計算機程式: https://cpb.kmol.info","tags":"Course","url":"https://40371235.github.io/40371235-final-report/blog/2017-fall-cadp-w2.html"}]}